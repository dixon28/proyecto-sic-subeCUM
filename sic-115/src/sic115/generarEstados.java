/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sic115;

import com.itextpdf.text.DocumentException;
import contGeneral.ListaLibroDiario;
import contGeneral.libroDiario;
import contGeneral.operacionesCierre;
import documentadores.BalanceComprobacion;
import documentadores.BalanceGeneral;
import documentadores.EstadoCapital;
import documentadores.EstadoResultado;
import java.io.FileNotFoundException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import otros.allFrames;
import otros.conexionBD;

/**
 *
 * @author sic
 */
public class generarEstados extends javax.swing.JFrame {

    ListaLibroDiario list = new ListaLibroDiario();
    conexionBD conex = new conexionBD();
    libroDiario libroactual = list.getActivoActual();
    ArrayList<libroDiario> ListaLibros = list.getActivosEinactivos();
    operacionesCierre cierre = new operacionesCierre();

    /**
     * Creates new form generarEstados
     */
    public generarEstados() {
        this.initComponents();
        allFrames.aplicarTema(this);
        new allFrames().CargarIcono(this);
        llenarCB();
        this.setLocationRelativeTo(null);
        this.setTitle("Generar Documentos");
        this.setResizable(false);
        this.btnGBalanceComprobacion.setEnabled(false);
        btnGBalanceGen.setEnabled(false);
        btnGEstadoCapital.setEnabled(false);
        btnGEstadoRes.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser2 = new javax.swing.JFileChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnGBalanceComprobacion = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnGEstadoRes = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnGEstadoCapital = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnGBalanceGen = new javax.swing.JButton();
        comboBoxLibros = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        seleccionar = new javax.swing.JButton();

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Generar balance comprobacion");

        btnGBalanceComprobacion.setText("Generar");
        btnGBalanceComprobacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGBalanceComprobacionActionPerformed(evt);
            }
        });

        jLabel2.setText("Generar estado de resultado");

        btnGEstadoRes.setText("Generar");
        btnGEstadoRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGEstadoResActionPerformed(evt);
            }
        });

        jLabel3.setText("Generar estado de capital");

        btnGEstadoCapital.setText("Generar");
        btnGEstadoCapital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGEstadoCapitalActionPerformed(evt);
            }
        });

        jLabel4.setText("Generar Balance general");

        btnGBalanceGen.setText("General");
        btnGBalanceGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGBalanceGenActionPerformed(evt);
            }
        });

        comboBoxLibros.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Periodo contable");

        seleccionar.setText("Seleccionar");
        seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGBalanceComprobacion))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnGEstadoRes, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnGEstadoCapital, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnGBalanceGen, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seleccionar)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(88, 88, 88))
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(comboBoxLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(26, 26, 26)
                .addComponent(comboBoxLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(seleccionar)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnGBalanceComprobacion))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnGEstadoRes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnGBalanceGen)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(btnGEstadoCapital))
                        .addGap(45, 45, 45)))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGBalanceComprobacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGBalanceComprobacionActionPerformed

        libroDiario libAfectado = (libroDiario) this.comboBoxLibros.getSelectedItem();
        cierre.cuentasliquidadas();
        cierre.cuentasliquidadasGenerales();

        BalanceComprobacion balanceC = new BalanceComprobacion();
        try {
            balanceC.generarBalance(libAfectado.getFechainicio(), libAfectado.getFechafin());

            this.btnGEstadoRes.setEnabled(true);
            this.btnGBalanceComprobacion.setEnabled(false);
            // espacio reservado para instancia de metodos uceda
        } catch (FileNotFoundException ex) {
            Logger.getLogger(generarEstados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(generarEstados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(generarEstados.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnGBalanceComprobacionActionPerformed

    private void seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarActionPerformed
        if (JOptionPane.showConfirmDialog(null, " ¿desea generar estados de este periodo, selecionado?") == 0) {

            this.comboBoxLibros.disable();
            libroDiario libAfectado = (libroDiario) this.comboBoxLibros.getSelectedItem();
            btnGBalanceComprobacion.setEnabled(true);
            cierre.recuperar(libAfectado.getId());// recupero subcuenta de x periodo

        } else {

        }

    }//GEN-LAST:event_seleccionarActionPerformed

    private void btnGEstadoResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGEstadoResActionPerformed

        libroDiario libAfectado = (libroDiario) this.comboBoxLibros.getSelectedItem();
        EstadoResultado estadoResultado = new EstadoResultado();

        try {
            estadoResultado.generarEstadodeResultado(libAfectado.getFechainicio(), libAfectado.getFechafin());

            btnGEstadoCapital.setEnabled(true);
            btnGEstadoRes.setEnabled(false);
            cierre.cuentasLiquidasDespuesER();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(generarEstados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(generarEstados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(generarEstados.class.getName()).log(Level.SEVERE, null, ex);
        }
        cierre.cuentasliquidadasGenerales();


    }//GEN-LAST:event_btnGEstadoResActionPerformed

    private void btnGEstadoCapitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGEstadoCapitalActionPerformed

        try {
            libroDiario libAfectado = (libroDiario) this.comboBoxLibros.getSelectedItem();
            EstadoCapital estadocapital = new EstadoCapital();

            estadocapital.generarEstadoCapital(libAfectado.getFechainicio(), libAfectado.getFechafin());
            btnGBalanceGen.setEnabled(true);
            btnGEstadoCapital.setEnabled(false);
            cierre.cuentasLiquidadasDespuesEC();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(generarEstados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(generarEstados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(generarEstados.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnGEstadoCapitalActionPerformed

    private void btnGBalanceGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGBalanceGenActionPerformed
        try {
            libroDiario libAfectado = (libroDiario) this.comboBoxLibros.getSelectedItem();
            BalanceGeneral balancefinal = new BalanceGeneral();
            balancefinal.generarBalanceGeneral(libAfectado.getFechainicio(), libAfectado.getFechafin());

            JOptionPane.showMessageDialog(this, "Se documento todo correctamente");
            btnGBalanceComprobacion.setEnabled(true);
            btnGBalanceGen.setEnabled(true);
            btnGEstadoCapital.setEnabled(true);
            btnGEstadoRes.setEnabled(true);
            seleccionar.setEnabled(true);
            comboBoxLibros.enable();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(generarEstados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(generarEstados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(generarEstados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGBalanceGenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(generarEstados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(generarEstados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(generarEstados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(generarEstados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new generarEstados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGBalanceComprobacion;
    private javax.swing.JButton btnGBalanceGen;
    private javax.swing.JButton btnGEstadoCapital;
    private javax.swing.JButton btnGEstadoRes;
    private javax.swing.JComboBox comboBoxLibros;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton seleccionar;
    // End of variables declaration//GEN-END:variables

    private void llenarCB() {

        DefaultComboBoxModel value;
        this.comboBoxLibros.removeAllItems();
        try {
            comboBoxLibros.removeAllItems();
            String sqlGeneral = "select *from librodiario";
            PreparedStatement declaracion1;
            declaracion1 = null;
            declaracion1 = this.conex.getConexion().prepareCall(sqlGeneral);
            ResultSet resultado1 = declaracion1.executeQuery();
            value = new DefaultComboBoxModel();
            comboBoxLibros.setModel(value);
            while (resultado1.next()) {
                libroDiario aux = new libroDiario();
                aux.setId(resultado1.getInt("id"));
                aux.setFechainicio(resultado1.getDate("fechainicio"));
                aux.setFechafin(resultado1.getDate("fechafin"));
                aux.setCerrado(resultado1.getBoolean("cerrado"));
                value.addElement(aux);
            }
        } catch (SQLException ex) {

        }

    }

}
