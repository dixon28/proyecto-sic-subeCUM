/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sic115;

import otros.conexionBD;
import otros.Usuario;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author Erick
 */
public class iniciar extends javax.swing.JDialog {

   conexionBD conectLogin= new conexionBD();
   Usuario usuario = new Usuario();
    
    public iniciar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setTitle("Iniciar sesion");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnIniciarSesion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Usuario");

        jLabel2.setText("Contrase単a");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        btnIniciarSesion.setText("Iniciar sesion");
        btnIniciarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUser, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(txtPassword)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(btnIniciarSesion)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(btnIniciarSesion)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarSesionActionPerformed
String usuario, contra;
usuario=this.txtUser.getText().toString();
contra=this.txtPassword.getPassword().toString();

       
 boolean bandera= camposVacios();
if(bandera==true){
buscarUsuario();
if(this.usuario.getId()==null){
    JOptionPane.showMessageDialog(null, "no tiene credenciales para acceder","Intente de nuevo",JOptionPane.ERROR_MESSAGE);
    limpiarCampos();
}
else
{ 
menuPrincipal menu= new menuPrincipal(this.usuario);

this.setVisible(false);
menu.setVisible(true);
}
}


    }//GEN-LAST:event_btnIniciarSesionActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(iniciar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(iniciar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(iniciar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(iniciar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                iniciar dialog = new iniciar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciarSesion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    private boolean camposVacios() {
String user,pass;
boolean a=false;
user=txtUser.getText().toString();
pass= txtPassword.getPassword().toString();
if(!user.isEmpty()&&!pass.isEmpty()){
    a=true;
}
    else{
    JOptionPane.showMessageDialog(null, "Algun campo esta vacio","Error",JOptionPane.ERROR_MESSAGE);
a=false;
}

return a;

}

    
    // Busqueda de usuario en la base de dato 
    
    private void buscarUsuario() {
        String user;
         List<Usuario> usuarios; //lista de usuarios
       usuarios = new ArrayList<Usuario>();
   
    
user=txtUser.getText().toString(); //valor del txtUser
char[] contra= txtPassword.getPassword(); //valor del txtPass
String pass;
       pass = new String(contra); // necesario esta conversion por el tipo de dato que tiene txtpass
       //String sql = "SELECT id_usuario,contrase単a,nombres FROM users WHERE id_usuario='"+user+"' and contrase単a='"+pass+"'";
String sql="select *from users"    ;
try{
    PreparedStatement declaracion= null;
   declaracion= this.conectLogin.getConexion().prepareStatement(sql);
   
    ResultSet resultado= declaracion.executeQuery();
    
   while(resultado.next()) //consulta todas los usuario
    {
           Usuario aux = new Usuario();
    aux.setId(resultado.getString("id_usuario"));
    aux.setPassword(resultado.getString("contrase単a"));
    aux.setNombres(resultado.getString("nombres"));
    
   usuarios.add(aux);
    }
        //ciclo
for(Usuario u:usuarios){ //los compara con los parametros escritos

if((u.getId().equals(user))&&u.getPassword().equals(pass))
{
usuario.setId(u.getId());
usuario.setNombres(u.getNombres());
usuario.setPassword(u.getPassword());
  //guarda en variable todo
}
else
{


}
}
  
 
    }
    catch(SQLException ex){
    JOptionPane.showMessageDialog(this, "Error al recuperar los productos de la base de datos");
 ex.printStackTrace();

    
    } 
    }

    
    //limpia campos, para volver a ingresardatos
    private void limpiarCampos() {
this.txtPassword.setText("");
this.txtUser.setText("");
    }
        
    
    }


